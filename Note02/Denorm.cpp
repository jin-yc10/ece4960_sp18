//
// Created by yj374 on 2/4/2018.
//

#include <stdio.h>
#include <iostream>

std::string double2hexstr(double x) {
    union {
        long long i;
        double    d;
    } value;

    value.d = x;
    char buf[17];
    snprintf (buf,sizeof(buf),"%016llx",value.i);
    buf[16]=0; //make sure it is null terminated.
    return std::string(buf);
}

int main(int argc, char** argv) {
    double x = 1.234567890123456;
    int i = 1;

    // The normalized number is above 4.9407*10^(-324)
    x *= 1e-307;

    // Decrease the normalized number to the range of denormals
    for (i=1; i<20; i++) {
        x /= 10.0;
        printf("%0.18e, %s\n",(x), double2hexstr(x).c_str());
    }
/*
VALUE                      HEX
1.234567890123456200e-308, 0008e0a3a2bc301e
1.234567890123457200e-309, 0000e343904604d0
1.234567890123457200e-310, 000016b9f4d3cd48
1.234567890123259500e-311, 00000245cbaec7ba
1.234567890124247700e-312, 0000003a2df7e0c6
1.234567890114366400e-313, 00000005d165967a
1.234567890015553200e-314, 0000000094f08f0c
1.234567891003684500e-315, 000000000ee4db1b
1.234567876181715100e-316, 00000000017d491c
1.234567777368586000e-317, 00000000002620e9
1.234566295171648500e-318, 000000000003d017
1.234571235828106900e-319, 000000000000619c
1.234670048957275100e-320, 00000000000009c3
1.235164114603116400e-321, 00000000000000fa
1.235164114603116400e-322, 0000000000000019
9.881312916824930900e-324, 0000000000000002
0.000000000000000000e+000, 0000000000000000
0.000000000000000000e+000, 0000000000000000
0.000000000000000000e+000, 0000000000000000
*/
}